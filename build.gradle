plugins {
    id 'java'
    id "org.sonarqube" version "2.7"
    id 'jacoco'
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
}

sonarqube {
    properties {
        property "sonar.projectName", "test"
        property "sonar.projectKey", "test"
        property "sonar.host.url", "http://3.37.34.49:9000/sonar"
        property "sonar.login", "ce980c1d54dc3feb7f9ebfa50195b422a537f4f6"
        property "sonar.sources", "src/main/java"
        property "sonar.tests", "src/test/java"
        property "sonar.coverage.jacoco.xmlReportPaths", "${buildDir}/jacoco/jacoco.xml"
    }
}


test {
    jacoco{
        destinationFile = file("${buildDir}/jacoco/jacoco.exec")
    }
    useJUnitPlatform()

    finalizedBy 'jacocoTestReport'
}

jacoco {
    toolVersion = '0.8.5'
}

jacocoTestReport {
    reports {
        html.enabled false
        xml.enabled false
        csv.enabled true

        html.destination file("${buildDir}/jacoco/jacoco.html")
        xml.destination file("${buildDir}/jacoco/jacoco.xml")
    }

//    이 설정을 열어주면 Code Coverage가 일정 이상이어야 Build됨
//    finalizedBy 'jacocoTestCoverageVerification'
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            // 'element'가 없으면 프로젝트의 전체 파일을 합친 값을 기준으로 한다.
            limit {
                // 'counter'를 지정하지 않으면 default는 'INSTRUCTION'
                // 'value'를 지정하지 않으면 default는 'COVEREDRATIO'
                minimum = 0.30
            }
        }

        rule {
            // 룰을 간단히 켜고 끌 수 있다.
            enabled = true

            // 룰을 체크할 단위는 클래스 단위
            element = 'CLASS'

            // 브랜치 커버리지를 최소한 50% 만족시켜야 한다.
            limit {
                counter = 'BRANCH'
                value = 'COVEREDRATIO'
                minimum = 0.50
            }

            // 라인 커버리지를 최소한 50% 만족시켜야 한다.
            limit {
                counter = 'LINE'
                value = 'COVEREDRATIO'
                minimum = 0.50
            }

            // 빈 줄을 제외한 코드의 라인수를 최대 300라인으로 제한한다.
            limit {
                counter = 'LINE'
                value = 'TOTALCOUNT'
                maximum = 300
//              maximum = 8
            }

            // 커버리지 체크를 제외할 클래스들
            excludes = [
                    '*.test.*',
            ]
        }
    }
}